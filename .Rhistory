gf_bar(~pclass|sex, data = titanic_modified,
fill=~survived,
position="stack") %>%
gf_labs(title = "Proportion of Survivors of Different Classes") %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))
gf_bar(~pclass|sex, data = titanic_modified,
fill=~survived,
position="fill") %>%
gf_labs(title = "Surviors based on Class and Gender") %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))
gf_bar(~pclass|sex, data = titanic_modified,
fill=~survived,
position="stack") %>%
gf_labs(title = "Surviors based on Class and Gender") %>%
gf_theme(theme(axis.text.x = element_text(size = 6, angle = 45, hjust = 1)))
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
inspect(math_anxiety)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
skimr::skim(math_anxiety)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
inspect(math_anxiety_modified)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
math_anxiety_modified %>% group_by(Gender) %>% summarize(mean_AMAS = mean(AMAS),mean(RCMAS), count=n())
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
babynames_modified <- babynames %>%
dplyr::mutate(
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
babynames
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
mpg_modified %>%
group_by(cyl) %>%
summarize(average_hmy =mean(hwy),count =n())
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
mpg %>% group_by(manufacturer) %>% summarize(mean_mileage_manf = mean(hwy))
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
mpg %>% group_by(manufacturer) %>% summarize(mean_mileage_manf = mean(cty))
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
glimpse(babynames)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
inspect(babynames)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
skimr::skim(babynames)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
mpg
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
glimpse(mpg)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
#|label: setup
library(tidyverse)
library(ggformula)
library(mosaic)
library(skimr)
library(kableExtra)
library(babynames)
math_anxiety_modified %>% group_by(Gender) %>% summarize(mean_AMAS = mean(AMAS),mean(RCMAS), count=n())
library(tidyverse)
library(mosaic)
library(skimr)
library(ggformula)
library(ggridges)
library(ggthemr)
library(ggsci)
library(dplyr)
ikea <-read_delim(file = "../../data/ikea-modified.csv",delim = ';')
ikea
ikea <-read_delim(file = "../../data/ikea-modified.csv",delim = ';')
ikea
ikea <-read_delim(file = "../../data/ikea-modified.csv",delim = ';')
ikea
ikea_modified <- ikea %>%
dplyr::mutate(category = as_factor(category))
glimpse(ikea_modified)
ikea_modified <- ikea %>%
dplyr::mutate(category = as_factor(category),
price_usd = as.double(price_usd))
glimpse(ikea_modified)
ikea_modified <- ikea %>%
dplyr::mutate(category = as_factor(category),
price_usd = as_double(price_usd))
ikea_modified <- ikea %>%
dplyr::mutate(category = as_factor(category),
price_usd = as.integer(price_usd))
glimpse(ikea_modified)
ikea_modified <- ikea %>%
dplyr::mutate(category = as_factor(category),
price_usd = as.double(price_usd))
glimpse(ikea_modified)
dplyr::mutate(price_usd = gsub("[^0-9.]", "", price_usd)) %>%
dplyr::mutate(price_usd = as.double(price_usd))
ikea_modified <- ikea %>%
dplyr::mutate(price_usd = gsub("[^0-9.]", "", price_usd)) %>%
dplyr::mutate(category = as_factor(category),
price_usd = as.double(price_usd))
glimpse(ikea_modified)
ikea_modified %>%
gf_density(~price_usd, fill = ~other_colors, color = "black") %>%
gf_facet_wrap(~category, scales = "free_y") %>%
gf_labs(
title = "Price distribution across IKEA categories",
subtitle = "Free y-scale for density plots",
caption = "ggformula"
) %>%
gf_theme(theme(axis.text.x = element_text(angle = 45, hjust = 1)))
ikea_modified %>%
dplyr::mutate(log_price_usd = log10(price_usd)) %>%  # Create a new column for log-transformed prices
gf_density(~log_price_usd, fill = ~other_colors, color = "black") %>%
gf_facet_wrap(~category, scales = "free_y") %>%
gf_labs(
title = "Log10 Price distribution across IKEA categories",
subtitle = "Free y-scale for density plots",
caption = "ggformula"
) %>%
gf_theme(theme(axis.text.x = element_text(angle = 45, hjust = 1)))
ikea_modified %>%
dplyr::mutate(log_price_usd = log10(price_usd + 1)) %>%  # Log transform and avoid log(0)
gf_density(~log_price_usd, fill = ~other_colors, color = "black") %>%
gf_facet_wrap(~category, nrow = length(unique(ikea_modified$category)), scales = "free_y") %>%  # Set nrow to number of categories
gf_labs(
title = "Log10 Price distribution across IKEA categories",
subtitle = "Free y-scale for density plots",
caption = "ggformula"
) %>%
gf_theme(theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.spacing = unit(1, "lines")))  # Optional: Increase spacing between panels
ikea_modified %>%
dplyr::mutate(log_price_usd = log10(price_usd + 1)) %>%  # Log transform with adjustment
gf_density(~log_price_usd, color = "black") %>%
gf_facet_wrap(~category, nrow = length(unique(ikea_modified$category)), scales = "free_y") %>%
gf_labs(
title = "Log10 Price distribution across IKEA categories",
subtitle = "Free y-scale for density plots",
caption = "ggformula"
) %>%
gf_theme(theme(axis.text.x = element_text(angle = 45, hjust = 1)))
# Create the density plot and save it with increased height
p <- ikea_modified %>%
dplyr::mutate(log_price_usd = log10(price_usd + 1)) %>%
gf_density(~log_price_usd, fill = ~other_colors, color = "black") %>%
gf_facet_wrap(~category, nrow = length(unique(ikea_modified$category)), scales = "free_y") %>%
gf_labs(
title = "Log10 Price distribution across IKEA categories",
subtitle = "Free y-scale for density plots",
caption = "ggformula"
) %>%
gf_theme(theme(axis.text.x = element_text(angle = 45, hjust = 1)))
# Save the plot with increased height (adjust width and height as needed)
ggsave("density_plot.png", plot = p, width = 10, height = 12)  # Increase height
# Create the density plot and save it with increased height
p <- ikea_modified %>%
dplyr::mutate(log_price_usd = log10(price_usd + 1)) %>%
gf_density(~log_price_usd, fill = ~other_colors, color = "black") %>%
gf_facet_wrap(~category, nrow = length(unique(ikea_modified$category)), scales = "free_y") %>%
gf_labs(
title = "Log10 Price distribution across IKEA categories",
subtitle = "Free y-scale for density plots",
caption = "ggformula"
) %>%
gf_theme(theme(axis.text.x = element_text(angle = 45, hjust = 1)))
# Save the plot with increased height (adjust width and height as needed)
ggsave("density_plot.png", plot = p, width = 10, height = 12)  # Increase height
ikea_modified %>%
dplyr::mutate(log_price_usd = log10(price_usd)) %>%  # Create a new column for log-transformed prices
gf_density(~log_price_usd, fill = ~other_colors, color = "black") %>%
gf_facet_wrap(~category, scales = "free_y") %>%
gf_labs(
title = "Log10 Price distribution across IKEA categories",
subtitle = "Free y-scale for density plots",
caption = "ggformula"
) %>%
gf_theme(theme(axis.text.x = element_text(angle = 45, hjust = 1)))
# Create the density plot
p <- ikea_modified %>%
dplyr::mutate(log_price_usd = log10(price_usd + 1)) %>%
gf_density(~log_price_usd, fill = ~other_colors, color = "black") %>%
gf_facet_wrap(~category, nrow = length(unique(ikea_modified$category)), scales = "free_y") %>%
gf_labs(
title = "Log10 Price distribution across IKEA categories",
subtitle = "Free y-scale for density plots",
caption = "ggformula"
) %>%
gf_theme(
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.spacing = unit(1, "lines")  # Optional spacing adjustment
)
)
# Save the plot with specified dimensions
ggsave("density_plot.png", plot = p, width = 10, height = 12)  # Adjust width and height as needed
ikea_modified %>%
dplyr::mutate(log_price_usd = log10(price_usd)) %>%  # Create a new column for log-transformed prices
gf_density(~log_price_usd, fill = ~other_colors, color = "black") %>%
gf_facet_wrap(~category, scales = "free_y") %>%
gf_labs(
title = "Log10 Price distribution across IKEA categories",
subtitle = "Free y-scale for density plots",
caption = "ggformula"
) %>%
gf_theme(theme(axis.text.x = element_text(angle = 45, hjust = 1)))
# Load required libraries
library(ggformula)
library(dplyr)
# Assume ikea_modified is already defined
# Check for NA values in price_usd and other_colors
sum(is.na(ikea_modified$price_usd))
sum(is.na(ikea_modified$other_colors))
# Create the density plot
p <- ikea_modified %>%
dplyr::mutate(log_price_usd = log10(price_usd + 1)) %>%  # Log transform
gf_density(~log_price_usd, fill = ~other_colors, color = "black") %>%
gf_facet_wrap(~category, nrow = length(unique(ikea_modified$category)), scales = "free_y") %>%  # Facet by category
gf_labs(
title = "Log10 Price Distribution Across IKEA Categories",
subtitle = "Free y-scale for density plots",
caption = "Source: IKEA Data"
) %>%
gf_theme(
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.spacing = unit(1, "lines")  # Optional: Increase space between panels
)
)
# Save the plot with specified dimensions
ggsave("density_plot.png", plot = p, width = 10, height = 12)  # Adjust width and height as needed
ikea_modified %>%
dplyr::mutate(log_price_usd = log10(price_usd)) %>%  # Create a new column for log-transformed prices
gf_density(~log_price_usd, fill = ~other_colors, color = "black") %>%
gf_facet_wrap(~category, scales = "free_y") %>%
gf_labs(
title = "Log10 Price distribution across IKEA categories",
subtitle = "Free y-scale for density plots",
caption = "ggformula"
) %>%
gf_theme(theme(axis.text.x = element_text(angle = 45, hjust = 1)))
ikea_modified %>%
dplyr::mutate(log_price_usd = log10(price_usd)) %>%  # Create a new column for log-transformed prices
gf_density(~price_usd, fill = ~other_colors, color = "black") %>%
gf_refine(scale_x_log10()) %>%
gf_facet_wrap(~category, scales = "free_y") %>%
gf_labs(
title = "Log10 Price distribution across IKEA categories",
subtitle = "Free y-scale for density plots",
caption = "ggformula"
) %>%
gf_theme(theme(axis.text.x = element_text(angle = 45, hjust = 1)))
library(tidyverse)
library(mosaic)
library(skimr)
library(ggformula)
movie <-read_delim(file = "../../data/movie_profit.csv")
movie
median_profit_ratio <-movie %>%
group_by(genre) %>%
summarise(median_profit_ratio = median(profit_ratio, na.rm = TRUE))
movie
# Convert profit_ratio to numeric (fixing commas if necessary)
movie$profit_ratio <- as.numeric(gsub(",", ".", movie$profit_ratio))
# Group by distributor and genre, then calculate the median profit ratio
profit_data <- movie %>%
group_by(distributor, genre) %>%
summarize(median_profit_ratio = median(profit_ratio, na.rm = TRUE)) %>%
filter(!is.na(median_profit_ratio))
ggplot(profit_data, aes(x = genre, y = median_profit_ratio)) +
geom_bar(stat = "identity", fill = "gray") +
facet_wrap(~ distributor, scales = "free") +
coord_flip() +
labs(
title = "Profits made by Film Distributors",
subtitle = "Ratio of Profits to Budgets",
x = "Genre",
y = "Median Profit Ratio"
) +
theme(
strip.text = element_text(face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1)
)
library(tidyverse)
library(mosaic)
library(skimr)
library(ggformula)
antarctic_ice <-read_delim(file = "../../data/ice.csv")
antarctic_ice <-read.csv(file = "../../data/ice.csv")
antarctic_ice <-read.csv(file = "../../data/ice.csv")
antarctic_ice <-read.csv(file = "../../data/ice.csv")
antarctic_ice <-readxl::(file = "../../data/ice.csv")
antarctic_ice <-readxl::read_xlsx(file = "../../data/ice.xlsx")
antarctic_ice <-readxl::read_xlsx(..)
antarctic_ice <-readxl::read_xlsx(../../data/ice.xlsx)
antarctic_ice <-readxl::read_xlsx(../../data/ice.xlsx)
antarctic_ice <-readxl::read_xlsx("../../data/ice.xlsx")
antarctic_ice
ice %>%
# Select columns
# Rename some while selecting !!
select("month" = ...1, "day" = ...2, c(4:49)) %>%
# Fill the month column! Yes!!
tidyr::fill(month) %>%
# Make Wide Data into Long
pivot_longer(
cols = -c(month, day),
names_to = "series",
values_to = "values"
) %>%
# Regular Munging
mutate(
series = as.integer(series),
month = factor(month,
levels = month.name,
labels = month.name,
ordered = TRUE
),
# Note munging for date!!
# Using the lubridate package, part of tidyverse
date = lubridate::make_date(
year = series,
month = month,
day = day
)
) -> ice_prepared
ice <-readxl::read_xlsx("../../data/ice.xlsx")
ice
ice %>%
# Select columns
# Rename some while selecting !!
select("month" = ...1, "day" = ...2, c(4:49)) %>%
# Fill the month column! Yes!!
tidyr::fill(month) %>%
# Make Wide Data into Long
pivot_longer(
cols = -c(month, day),
names_to = "series",
values_to = "values"
) %>%
# Regular Munging
mutate(
series = as.integer(series),
month = factor(month,
levels = month.name,
labels = month.name,
ordered = TRUE
),
# Note munging for date!!
# Using the lubridate package, part of tidyverse
date = lubridate::make_date(
year = series,
month = month,
day = day
)
) -> ice_prepared
ice_prepared
library(tidyverse)
library(mosaic)
library(ggformula)
library(infer)
install.packages('broom')
library(tidyverse)
library(mosaic)
library(ggformula)
library(infer)
install.packages('infer')
library(tidyverse)
library(mosaic)
library(ggformula)
library(infer)
library(broom)
library(resampledata)
install.packages('resampledata')
install.packages('openintro')
library(tidyverse)
library(mosaic)
library(ggformula)
library(infer)
library(broom)
library(resampledata)
library(openintro)
set.seed(40)  # for replication
# Data as individual vectors ( for t.tests etc)
y <- rnorm(50, mean = 2, sd = 2)
# And as tibble too
mydata <- tibble(y = y)
mydata
# Set graph theme
theme_set(new = theme_custom())
#
mydata %>%
gf_density(~y) %>%
gf_fitdistr(dist = "dnorm") %>%
gf_labs(title = "Densities of Original Data Variables", subtitle = "Compared with Normal Density")
ikea <-read_delim(file = "../../data/ikea-modified.csv",delim = ';')
ikea
ikea_modified <- ikea %>%
dplyr::mutate(price_usd = gsub("[^0-9.]", "", price_usd)) %>%
dplyr::mutate(category = as_factor(category),
price_usd = as.double(price_usd))
glimpse(ikea_modified)
